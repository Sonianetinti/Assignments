using System;
using System.Collections.Generic;
using System.Linq;

public class Employee
{
    public int EmployeeID{get;set;}
    public string FirstName{get;set;}
    public string LastName{get;set;}
    public string Title{get;set;}
    public DateTime DOB{get;set;}
    public DateTime DOJ{get;set;}
    public string City{get;set;}
    
}

public class HelloWorld
{
    public static List<Employee> empList = new List<Employee>
{
new Employee() {EmployeeID = 1001,FirstName = "Malcolm",LastName = "Daruwalla",Title = "Manager",DOB = DateTime.Parse("1984-01-02"),DOJ = DateTime.Parse("2011-08-09"),City = "Mumbai"},
new Employee() {EmployeeID = 1002,FirstName = "Asdin",LastName = "Dhalla",Title = "AsstManager",DOB = DateTime.Parse("1984-08-20"),DOJ = DateTime.Parse("2012-7-7"),City = "Mumbai"},
new Employee() {EmployeeID = 1003,FirstName = "Madhavi",LastName = "Oza",Title = "Consultant",DOB = DateTime.Parse("1987-11-14"),DOJ = DateTime.Parse("2105-12-04"),City = "Pune"},
new Employee() {EmployeeID = 1004,FirstName = "Saba",LastName = "Shaikh",Title = "SE",DOB = DateTime.Parse("6/3/1990"),DOJ = DateTime.Parse("2/2/2016"),City = "Pune"},
new Employee() {EmployeeID = 1005,FirstName = "Nazia",LastName = "Shaikh",Title = "SE",DOB = DateTime.Parse("3/8/1991"),DOJ = DateTime.Parse("2/2/2016"),City = "Mumbai"},
new Employee() {EmployeeID = 1006,FirstName = "Suresh",LastName = "Pathak",Title = "Consultant",DOB = DateTime.Parse("11/7/1989"),DOJ = DateTime.Parse("8/8/2014"),City = "Chennai"},
new Employee() {EmployeeID = 1007,FirstName = "Vijay",LastName = "Natrajan",Title = "Consultant",DOB = DateTime.Parse("12/2/1989"),DOJ = DateTime.Parse("6/1/2015"),City = "Mumbai"},
new Employee() {EmployeeID = 1008,FirstName = "Rahul",LastName = "Dubey",Title = "Associate",DOB = DateTime.Parse("11/11/1993"),DOJ = DateTime.Parse("11/6/2014"),City = "Chennai"},
new Employee() {EmployeeID = 1009,FirstName = "Amit",LastName = "Mistry",Title = "Associate",DOB = DateTime.Parse("8/12/1992"),DOJ = DateTime.Parse("12/3/2014"),City = "Chennai"},
new Employee() {EmployeeID = 1010,FirstName = "Sumit",LastName = "Shah",Title = "Manager",DOB = DateTime.Parse("4/12/1991"),DOJ = DateTime.Parse("1/2/2016"),City = "Pune"},
};
 public static void DisplayAll()
        {
            var query1 = from emp in empList
                         select emp;
            foreach(var e in query1)
            {
                Console.WriteLine("EmpId: {0}\t First-Name: {1}\t Last-Name: {2}\t Joining-Year: {3}\tTitle: {4}\tDOB: {5}\tCity: {6}", e.EmployeeID, e.FirstName, e.LastName, e.Title, e.DOB, e.DOJ, e.City);
            }
        }
        //display the details except mumbai location
        public static void DisplayLocation()
        {
            var query2= from e in empList
                        where e.City != "Mumbai"
                        select e;
            foreach (var e in query2)
            {
                Console.WriteLine("EmpId: {0}\t First-Name: {1}\t Last-Name: {2}\t Joining-Year: {3}\tTitle: {4}\tDOB: {5}\tCity: {6}", e.EmployeeID, e.FirstName, e.LastName, e.Title, e.DOB, e.DOJ, e.City);
            }
        }
        //displaying details whose title is AsstManager
        public static void DisplayTitle()
        {
            var query3= from e in empList
                        where e.Title == "AsstManager"
                        select e;
            foreach (var e in query3)
            {
                Console.WriteLine("EmpId: {0}\t First-Name: {1}\t Last-Name: {2}\t Joining-Year: {3}\tTitle: {4}\tDOB: {5}\tCity: {6}", e.EmployeeID, e.FirstName, e.LastName, e.Title, e.DOB, e.DOJ, e.City);
            }
        }
        //display last name starts with s
         public static void DisplayLastS()
        {
            var query4= from e in empList where (e.LastName.StartsWith("S")) select e;
            foreach (var e in query4)
            {
                Console.WriteLine("EmpId: {0}\t First-Name: {1}\t Last-Name: {2}\t Joining-Year: {3}\tTitle: {4}\tDOB: {5}\tCity: {6}", e.EmployeeID, e.FirstName, e.LastName, e.Title, e.DOB, e.DOJ, e.City);
            }
        }
        //display DOJ
        public static void DisplayDOJ()
        {
            var query5= from e in empList where e.DOJ<Convert.ToDateTime("1/1/2015") select e;
            foreach (var e in query5)
            {
                Console.WriteLine("EmpId: {0}\t First-Name: {1}\t Last-Name: {2}\t Joining-Year: {3}\tTitle: {4}\tDOB: {5}\tCity: {6}", e.EmployeeID, e.FirstName, e.LastName, e.Title, e.DOB, e.DOJ, e.City);
            }
        }
        //display DOB
        public static void DisplayDOB()
        {
            var query6= from e in empList where e.DOB>Convert.ToDateTime("1/1/1990") select e;
            foreach (var e in query6)
            {
                Console.WriteLine("EmpId: {0}\t First-Name: {1}\t Last-Name: {2}\t Joining-Year: {3}\tTitle: {4}\tDOB: {5}\tCity: {6}", e.EmployeeID, e.FirstName, e.LastName, e.Title, e.DOB, e.DOJ, e.City);
            }
        }
        //display designation for consultant & associate
         public static void DisplayDesignation()
        {
            var query7= from e in empList where (e.Title=="Consultant")||(e.Title=="Associate") select e;
            foreach (var e in query7)
            {
                Console.WriteLine("EmpId: {0}\t First-Name: {1}\t Last-Name: {2}\t Joining-Year: {3}\tTitle: {4}\tDOB: {5}\tCity: {6}", e.EmployeeID, e.FirstName, e.LastName, e.Title, e.DOB, e.DOJ, e.City);
            }
        }
        
        //display total number of employees
        public static void DisplayTotalNoEmp()
        {
            int query8= empList.Count();
            Console.WriteLine(query8);
        }
        //
         public static void DisplayChennai()
        {
            int query9= (from e in empList where e.City=="Chennai" select e).Count();
            Console.WriteLine(query9);
        }
        
        public static void DisplayHighest()
        {
             int query10 = empList.Max(em=>em.EmployeeID);   
            Console.WriteLine(query10);
        }
        //
        public static void DisplayJoined()
        {
             Console.WriteLine("employees joined after 1/1/2015");
            var query11= from emp in empList where emp.DOJ > (new DateTime(2015,1,1)) select emp;
            foreach (var e in query11)
            {
                Console.WriteLine("EmpId: {0}\t First-Name: {1}\t Last-Name: {2}\t Joining-Year: {3}\tTitle: {4}\tDOB: {5}\tCity: {6}", e.EmployeeID, e.FirstName, e.LastName, e.Title, e.DOB, e.DOJ, e.City);
            }
        }
        //total number of employees whose designation is not Associate
        public static void DisplayAssociate()
        {
             Console.WriteLine("employees whose designation is not Associate");
           int query12 = (from emp in empList where emp.Title != "Associate" select emp).Count();
            
              Console.WriteLine(query12);
        }
        
        //Employees based on City
            public static void DisplayCityCount()
        {
          Console.WriteLine("total employees  based on city");
           int query13 = (from e in empList group e by e.City).Count();
            Console.WriteLine(query13);
        }
        //Employees based on city and title
            public static void DisplayCityTitleCount()
        {
             Console.WriteLine("total employees  based on city and title");
           int query14 = (from e in empList group e by ( e.City,e.Title)).Count();
            Console.WriteLine(query14);
        }
        
        //display who is youngest 
        public static void DisplayYoungest()
        {
            Console.WriteLine("youngest in the list");
            var youngest = empList.Select(e => e.DOB);
           
            
            Console.WriteLine(youngest.Min());
        }
      
        
  public static void Main(string[] args)
    {
        //a.Display details of all the employees
        DisplayAll();
        //b.display details of employees whose location is not mumbai
        DisplayLocation();
        //c.display details whose title is AsstManager
        DisplayTitle();
        //d.employees whose last name starts with S
        DisplayLastS();
        //e.employees who have joined before 1/1/2015
        DisplayDOJ();
        //f.employees whose date of birth is 1/1/1990
        DisplayDOB();
        //g.employees whose designation is Consultant and Associate
        DisplayDesignation();
        //h.total number of employees
        DisplayTotalNoEmp();
        //i.total number of employees belonging to chennai
        DisplayChennai();
        //j.highest employee id
        DisplayHighest();
        //k.employees who joined after 1/1/2015
        DisplayJoined();
        //l.employee whose designation is not Associate
        DisplayAssociate();
        //m. employees based on city
        DisplayCityCount();
        //n.total employees based on city and title
        DisplayCityTitleCount();
        //o.employees eho is youngest in the list
        DisplayYoungest();
    }
}
